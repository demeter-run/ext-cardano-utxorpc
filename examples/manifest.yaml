# Project namespace
apiVersion: v1
kind: Namespace
metadata:
  name: utxorpc
---
# Access for the service account
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kube-rs
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
# Scoped service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-rs
  namespace: utxorpc
automountServiceAccountToken: true
---
# Binding the role to the account
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kube-rs-binding
  namespace: utxorpc
subjects:
  - kind: ServiceAccount
    namespace: utxorpc
    name: kube-rs
roleRef:
  kind: ClusterRole
  name: kube-rs
  apiGroup: rbac.authorization.k8s.io
---
# Grafana dependence
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: utxorpc
  labels:
    app: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana
          ports:
            - name: grafana
              containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: app
  namespace: utxorpc
  labels:
    app: grafana
spec:
  ports:
    - port: 3000
  selector:
    app: grafana
  clusterIP: None
---
# Prometheus dependence
apiVersion: v1
data:
  prometheus.yml: |
    global:
      scrape_interval: 30s
      evaluation_interval: 30s

    scrape_configs:
      - job_name: proxy
        static_configs:
          - targets: ["proxy:9187"]
      - job_name: operator
        static_configs:
          - targets: ["operator:9187"]
kind: ConfigMap
metadata:
  name: prometheus-vol
  namespace: utxorpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: utxorpc
  labels:
    app: prometheus
spec:
  selector:
    matchLabels:
      app: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          ports:
            - name: prometheus
              containerPort: 9090
          volumeMounts:
            - name: configs
              mountPath: /etc/prometheus
      volumes:
        - name: configs
          configMap:
            name: prometheus-vol
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: utxorpc
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  type: ClusterIP
  ports:
    - name: prometheus
      port: 80
      targetPort: 9090
      protocol: TCP
---
# Run proxy
apiVersion: v1
data:
  localhost.crt: |
    -----BEGIN CERTIFICATE-----
    MIIF7zCCA9egAwIBAgIUGh02kshQoQEPW8JaUMs9ev7XrjowDQYJKoZIhvcNAQEL
    BQAwgYYxCzAJBgNVBAYTAlhYMRIwEAYDVQQIDAlTdGF0ZU5hbWUxETAPBgNVBAcM
    CENpdHlOYW1lMRQwEgYDVQQKDAtDb21wYW55TmFtZTEbMBkGA1UECwwSQ29tcGFu
    eVNlY3Rpb25OYW1lMR0wGwYDVQQDDBRDb21tb25OYW1lT3JIb3N0bmFtZTAeFw0y
    NDEwMzExNDA1MjJaFw0zNDEwMjkxNDA1MjJaMIGGMQswCQYDVQQGEwJYWDESMBAG
    A1UECAwJU3RhdGVOYW1lMREwDwYDVQQHDAhDaXR5TmFtZTEUMBIGA1UECgwLQ29t
    cGFueU5hbWUxGzAZBgNVBAsMEkNvbXBhbnlTZWN0aW9uTmFtZTEdMBsGA1UEAwwU
    Q29tbW9uTmFtZU9ySG9zdG5hbWUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIK
    AoICAQCYTFHI1Aemm5g0XVe/bKIPJpQiO/xCH0lfYzsnoDYDWnwXVlQ8Jd31J+0D
    dmExReGY2cNb4XlkZyXzB6F0wDep73FJ6BbcY7uz4j3xW9lMTN8S4dfg7ssxEgYN
    hRydgIm9vDfWN4gybMdiRV2xfkUKvgTRd/Qd1TnoL6DTXwg4NkxtOCk/ta0ltPkk
    NJyr4u2z7IUIrKvl1zR5imf/L3jwjW99JBw1hrfLhaR9NhwB1G6h06vFQbyjyzFG
    mGR0/UQrbqeP2zZ66RytNAVc4qYJcGn+Ahxpq7GwMZs6LCuRiZwEK1BkRsZjEJZs
    ZS2f2gsBIyBF3zqhF1/W9vwPitg7RTZevgUi5zRYf07hoJAhEHKeSs00tnUyDtNn
    GDIHudM6lGXC/l+kPIBNiPdpuJT6p5rFyzhywGPJgxpmVhNq1IwhbPSmBJOUgbqi
    Y/QomVguBzdGTezLyrM7MVPrCyz9zF8dd4iv84eRdLGzxBJ8ogHpje1iL841rPZj
    xN2B1/hAxNNNkJmkb/b47BLl3ZL8a9dAggImJJriZ84YKJMgaQD4AXsziVQBIyJH
    pO0xAWWMVA3sDiVmOPQIjNdVYO/I53HtCq8IKNYE0hypniAakRmNI8mI6gZPjCXE
    IKo8bPewhdO7+Q1BAuMVWuFhq2s8FI/AChKQ2rPN7r8rgjtzEwIDAQABo1MwUTAd
    BgNVHQ4EFgQUIm/2kyVtA1KS5YyS/7FmWt8LZiAwHwYDVR0jBBgwFoAUIm/2kyVt
    A1KS5YyS/7FmWt8LZiAwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOC
    AgEAZCgA/EDEieENBsK/H8/zGVc9ddFBOjqhJyE7CJyCvmvh75BTTh42u+SRckPt
    G2ZjyrD2N7Ylet3giJEH7asMnrBTazITbL1vY3P4onn45TVKOx0qCHy8cqjueVXi
    czhux5SDP+rH7SiftRQOb8QfYyEpOOqgbcclcTqc6gP5GBjSbx+qIzKd6TVo50zB
    QjZNlXnjhYoiYon3zAvG9Jlgcj10KGttyenGN941/fboujSeDNXgQeZdzhu8K4Ot
    Sc2SFWKK3MjrEPVqgrk/IuGx7pTdMQWZUbEhQ9NeP54kAVf/5TO/wl0lODque6/B
    539G0EWxhh2kEhXvfbYipvL8oq7LxYJjfPe8cylZUQlKyHdhg7NR1S2ErA8BMpzD
    cRIcOh0liW6QmZQAgXaAU2JM6PoypNoTXIVZ9fYGwhzwv7SsKzsNywqNGVhviPZP
    8hn0d7jQbJ7OP28cxFwqKK2DrsqMK/5QYHLxXxZEDeSwegmt7lCo8C3Ne/s5IEXd
    7MHqy70vMO85ecVrCSu9pQqDF8gLhYVaR4/RVXu4+ti6qRkywqVGnWjko/0bDCmg
    ABEUs/eVqkaBU8Q+9jUJCkvxzH2TaU8pu5341CWFUFHyQ43bmTDGfOHYUOudk1/B
    N3A0Z41Y3KT0Q6eRodSQ9CeL3c9USI8jZocYOZuuw8U7wTY=
    -----END CERTIFICATE-----
  localhost.key: |
    -----BEGIN PRIVATE KEY-----
    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
    U+Z3+a/2IKK818OeKXfzhVLLZNqw
    -----END PRIVATE KEY-----
kind: ConfigMap
metadata:
  name: proxy-config
  namespace: utxorpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy
  namespace: utxorpc
  labels:
    app: proxy
spec:
  selector:
    matchLabels:
      app: proxy
  template:
    metadata:
      labels:
        app: proxy
    spec:
      serviceAccountName: kube-rs
      containers:
        - name: proxy
          image: utxorpc-proxy:1.0
          ports:
            - containerPort: 80
          env:
            - name: NETWORK 
              value: "mainnet"
            - name: PROXY_NAMESPACE 
              value: "utxorpc"
            - name: PROMETHEUS_ADDR 
              value: "0.0.0.0:9187"
            - name: PROXY_ADDR
              value: "0.0.0.0:80"
            - name: UTXORPC_PORT
              value: "80"
            - name: UTXORPC_DNS
              value: "utxorpc-mainnet-v1.utxorpc.svc.cluster.local"
            - name: SSL_CRT_PATH
              value: "/utxorpc-proxy/localhost.crt"
            - name: SSL_KEY_PATH
              value: "/utxorpc-proxy/localhost.key"
          volumeMounts:
            - name: proxy-vol
              mountPath: /utxorpc-proxy

      volumes:
        - name: proxy-vol
          configMap:
            name: proxy-config
---
apiVersion: v1
kind: Service
metadata:
  name: proxy
  namespace: utxorpc
  labels:
    app: proxy
spec:
  selector:
    app: proxy
  type: ClusterIP
  ports:
    - name: proxy
      port: 80
      targetPort: 80
      protocol: TCP
    - name: proxy-prometheus
      port: 9187
      targetPort: 9187
      protocol: TCP
---
# Run operator
apiVersion: apps/v1
kind: Deployment
metadata:
  name: operator
  namespace: utxorpc
  labels:
    app: operator
spec:
  selector:
    matchLabels:
      app: operator
  template:
    metadata:
      labels:
        app: operator
    spec:
      serviceAccountName: kube-rs
      containers:
        - name: operator
          image: utxorpc-operator:1.0
          ports:
            - containerPort: 9187
          env:
            - name: ADDR
              value: "0.0.0.0:9187"
            - name: METRICS_DELAY
              value: "60"
            - name: PROMETHEUS_URL
              value: "http://prometheus/api/v1"
---
apiVersion: v1
kind: Service
metadata:
  name: operator
  namespace: utxorpc
  labels:
    app: operator
spec:
  selector:
    app: operator
  type: ClusterIP
  ports:
    - name: operator
      port: 9187
      targetPort: 9187
      protocol: TCP
---
# Mock dependence
apiVersion: apps/v1
kind: Deployment
metadata:
  name: utxorpc-mainnet-v1
  namespace: utxorpc
  labels:
    app: utxorpc-mainnet-v1
spec:
  selector:
    matchLabels:
      app: utxorpc-mainnet-v1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: utxorpc-mainnet-v1
    spec:
      containers:
        - name: utxorpc-mainnet-v1
          image: paulobressan/grpc_mock:1.0.0
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: utxorpc-mainnet-v1
  namespace: utxorpc
  labels:
    app: utxorpc-mainnet-v1
spec:
  selector:
    app: utxorpc-mainnet-v1
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
---
# Utxo Rpc Port 2
apiVersion: demeter.run/v1alpha1
kind: UtxoRpcPort
metadata:
  name: mainnet-user-2
  namespace: utxorpc
spec:
  operatorVersion: "1"
  network: mainnet
  throughputTier: "0"
  utxorpcVersion: "v1"
